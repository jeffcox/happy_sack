#! /usr/bin/env bash

# Editor: if SACK_EDITOR is not defined, take the default editor.
if [ ! -z ${SACK_EDITOR+x} ]; then
    editor=$SACK_EDITOR
else
    editor=$EDITOR
fi

# Sack shortcut file. '.~/.sack_shortcurt' if the variable SACK_SHORTCUT is not
# defined.
if [ ! -z ${SACK_SHORTCUT+x} ]; then
    sack_shortcutfile=$SACK_SHORTCUT
else
    sack_shortcutfile=~/.sack_shortcuts
fi

# Get the line number and the file name
# quick check for gsed
_sedcmd=sed
if [ $OSTYPE = darwin* ]; then
    if [ -x gsed ]; then
        _sedcmd=gsed
    else
        echo "fix bsd sed output or install gsed"
    fi
fi

_sack_line=`$_sedcmd -n "$1p" < $sack_shortcutfile`
_lineno=`echo $_sack_line | awk '{ print $1 }'`
_fname=`echo $_sack_line | awk '{ print $2 }'`

if [ -f $sack_shortcut ]; then
    # SublimeText
    if [[ "$editor" =~ 'subl' ]]; then
        subl $_fname:$_lineno
    # Emacs & Vim
    else
        $editor +$_lineno $_fname
    fi
else
    echo "Sack shortcuts file '~/.sack_shortcuts' not found."
    echo "Please define the env. variable SACK_SHORTCUT or check if the file exist."
    exit 0
fi
